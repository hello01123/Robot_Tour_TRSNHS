{"entries":[{"timestamp":1730171551706,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":67,"start2":67,"length1":20,"length2":8},{"diffs":[[0,"-start\"></block>"],[1,"\n  "],[0,"<block type=\"dev"]],"start1":64,"start2":64,"length1":32,"length2":35},{"diffs":[[0,"ver\""],[-1," x=\"205\" y=\"0\"></block><block type=\"function_definition\" x=\"506\" y=\"289\"><mutation name=\"turn\" functionid=\"*He`;w;]l+#^u_L2;/of\"></mutation><field name=\"function_name\">turn</field"],[0,"></b"]],"start1":107,"start2":107,"length1":187,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"function turn() {\n    \n}\n\nbasic.forever(function on_forever() {\n    \n})"],[0,"\n"]],"start1":0,"start2":0,"length1":72,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"k8\": \"github:k8robotics/pxt-k8#v1.1.0\""],[0,"\n   "]],"start1":128,"start2":128,"length1":57,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":212,"start2":212,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"def turn():\n    pass\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)\n"}]},{"timestamp":1730171621569,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"ts"],[1,"py"],[0,"prj\"\n}\n"]],"start1":308,"start2":308,"length1":17,"length2":17}]}]},{"timestamp":1730252436002,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ne\": \"*\""],[1,",\n        \"k8\": \"github:k8robotics/pxt-k8#v1.1.0\""],[0,"\n    },\n"]],"start1":124,"start2":124,"length1":16,"length2":65}]}]},{"timestamp":1730339619104,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n})\n"],[-1,"export let M2_PWR: number = DigitalPin.P13\nexport let M2_DIR: number = DigitalPin.P14\nexport let M1_PWR: number = DigitalPin.P15\nexport let M1_DIR: number = DigitalPin.P16"]],"start1":68,"start2":68,"length1":175,"length2":4}]}]},{"timestamp":1730339672629,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"urn("],[-1,"a:number) {\n    pins.digitalWritePin(DigitalPin.P16, 0) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 1) //M2 Dir\n    pins.map(a, 0,100,0,1023)\n    if (a<0){\n        a = 0\n    }else if(a > 100){\n        a = 100\n    }\n    pins.analogWritePin(AnalogPin.P15, a)\n    pins.analogWritePin(AnalogPin.P13, a)\n"],[1,") {\n    "],[0,"\n}\n\n"]],"start1":10,"start2":10,"length1":313,"length2":16},{"diffs":[[0,"\n})\n"],[-1,"/*"],[0,"expo"]],"start1":68,"start2":68,"length1":10,"length2":8},{"diffs":[[0,"Pin.P13\n"],[1,""],[0,"export l"]],"start1":107,"start2":107,"length1":16,"length2":16},{"diffs":[[0,"Pin.P15\n"],[1,""],[0,"export l"]],"start1":193,"start2":193,"length1":16,"length2":16},{"diffs":[[0,".P16"],[-1,"\n*/\nturn(2000)"]],"start1":239,"start2":239,"length1":18,"length2":4}]}]},{"timestamp":1730340262762,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"\nconst minSpeed = 20;       // Minimum speed when close to the target\nconst maxSpeed = 40;      // Maximum speed when far from the target\nconst slowdownThreshold = 20;  // Start slowing down within this angle\n\n"],[0,"func"]],"start1":0,"start2":0,"length1":214,"length2":4},{"diffs":[[0,"unction "],[-1,"m"],[0,"turn(a:n"]],"start1":1,"start2":1,"length1":17,"length2":16},{"diffs":[[0,") {\n"],[-1,"    if (a<0){\n    "],[0,"    "]],"start1":22,"start2":22,"length1":26,"length2":8},{"diffs":[[0,"0) //M1 Dir\n    "],[-1,"  "],[-1,"  "],[0,"pins.digitalWrit"]],"start1":67,"start2":67,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"}else{\n        pins.digitalWritePin(DigitalPin.P16, 1) //M1 Dir\n        pins.digitalWritePin(DigitalPin.P14, 0) //M1 Dir\n    }\n    a = Math"],[1,"pins"],[0,".map"]],"start1":132,"start2":132,"length1":147,"length2":12},{"diffs":[[0,", 0,"],[-1," "],[0,"100,"],[-1," "],[0,"0,"],[-1," "],[0,"1023"]],"start1":146,"start2":146,"length1":17,"length2":14},{"diffs":[[0,"<0){"],[-1,"a = 0}else if(a > 1023){a = 1023}\n    pins.analogWritePin(AnalogPin.P15, a)\n    pins.analogWritePin(AnalogPin.P13, a)\n}\n\nfunction stop() {"],[1,"\n        a = 0\n    }else if(a > 100){\n        a = 100\n    }"],[0,"\n   "]],"start1":171,"start2":171,"length1":146,"length2":67},{"diffs":[[0,"in.P15, "],[-1,"0"],[1,"a"],[0,")\n    pi"]],"start1":266,"start2":266,"length1":17,"length2":17},{"diffs":[[0,"13, "],[-1,"0)\n    pins.digitalWritePin(DigitalPin.P16, 0) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 0) //M2 Dir"],[1,"a)\n"],[0,"\n}\n"],[1,"\n"],[0,"basi"]],"start1":312,"start2":312,"length1":119,"length2":15},{"diffs":[[0,"() {"],[-1," })\n\nfunction turn(targetHeading:number) {\n    while error > 0{}\n    const currentHeading = input.compassHeading();\n    let error = targetHeading - currentHeading;\n\n    if (error > 180) {\n        error -= 360;\n    } else if (error < -180) {\n        error += 360;\n    }\n\n    const absError = Math.abs(error);\n    if (absError > 0) {  // Only turn if error is greater than 5 degrees\n        let speed = Math.max(minSpeed, Math.floor(maxSpeed * absError / slowdownThreshold));\n        speed = Math.min(speed, maxSpeed);  // Cap speed at maxSpeed\n\n        if (error > 0) {\n            mturn(speed);\n        } else {\n            mturn(-speed);\n        }\n    } else {\n        stop();  // Stop when within 5 degrees of target\n    }\n}\n"],[1,"\n    \n})\n/*export let M2_PWR: number = DigitalPin.P13\nexport let M2_DIR: number = DigitalPin.P14\nexport let M1_PWR: number = DigitalPin.P15\nexport let M1_DIR: number = DigitalPin.P16\n*/"],[0,"\nturn(20"],[1,"00"],[0,")"]],"start1":356,"start2":356,"length1":740,"length2":200}]}]},{"timestamp":1730340859917,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"urn(a:number) {\n"],[1,"    if (a<0){\n    "],[0,"    pins.digital"]],"start1":221,"start2":221,"length1":32,"length2":50},{"diffs":[[0,"in.P16, "],[-1,"1"],[1,"0"],[0,") //M1 D"]],"start1":288,"start2":288,"length1":17,"length2":17},{"diffs":[[0,"16, 0) //M1 Dir\n"],[1,"    "],[0,"    pins.digital"]],"start1":292,"start2":292,"length1":32,"length2":36},{"diffs":[[0,"in.P14, "],[-1,"0"],[1,"1"],[0,") //M"],[-1,"1"],[1,"2"],[0," Dir\n   "]],"start1":345,"start2":345,"length1":23,"length2":23},{"diffs":[[0,"    "],[-1,"a = Math.map(a, 0, 100, 0, 1023)\n    if (a<0){a = 0}else if(a > 1023){a = 1023}\n    pins.analogWritePin(AnalogPin.P15, a)\n    pins.analogWritePin(AnalogPin.P13, a)\n}\nfunction mrturn(a: number) {\n"],[1,"}else{\n    "],[0,"    "]],"start1":365,"start2":365,"length1":203,"length2":19},{"diffs":[[0,"DigitalPin.P16, "],[-1,"0"],[1,"1"],[0,") //M1 Dir\n    p"]],"start1":405,"start2":405,"length1":33,"length2":33},{"diffs":[[0,"1) //M1 Dir\n    "],[1," "],[1,"   "],[0,"pins.digitalWrit"]],"start1":421,"start2":421,"length1":32,"length2":36},{"diffs":[[0,"talPin.P14, "],[-1,"1"],[1,"0"],[0,") //M1 Dir\n "]],"start1":466,"start2":466,"length1":25,"length2":25},{"diffs":[[0,"0) //M1 Dir\n"],[1,"    }\n"],[0,"    a = Math"]],"start1":478,"start2":478,"length1":24,"length2":30},{"diffs":[[0,"f (a"],[-1," < 0) { "],[1,"<0){"],[0,"a = 0"],[-1," } "],[1,"}"],[0,"else if"],[-1," "],[0,"(a >"]],"start1":538,"start2":538,"length1":32,"length2":25},{"diffs":[[0,"023)"],[-1," { "],[1,"{"],[0,"a = 1023"],[-1," "],[0,"}\n  "]],"start1":565,"start2":565,"length1":20,"length2":17},{"diffs":[[0,"3, a)\n}\n"],[1,"\n"],[0,"function"]],"start1":658,"start2":658,"length1":16,"length2":17},{"diffs":[[0,"r\n}\n"],[-1,"function forward() {\n    let error = 10;\n\n    while (error > 0) {\n        const currentHeading = input.compassHeading();\n        error = targetHeading - currentHeading;\n\n        if (error > 180) {\n            error -= 360;\n        } else if (error < -180) {\n            error += 360;\n        }\n\n        const absError = Math.abs(error);\n\n        // Map error to speed for directional control\n        let speed = Math.max(minSpeed, Math.floor(maxSpeed * absError / slowdownThreshold));\n        speed = Math.min(speed, maxSpeed); // Cap speed at maxSpeed\n\n        // Determine motor directions based on heading error\n        if (error > 0) {\n            // Correct towards the left\n            pins.digitalWritePin(DigitalPin.P16, 0); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, speed);\n            pins.analogWritePin(AnalogPin.P13, Math.floor(speed * 0.9)); // Slightly lower speed for right motor\n        } else if (error < 0) {\n            // Correct towards the right\n            pins.digitalWritePin(DigitalPin.P16, 0); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, Math.floor(speed * 0.9)); // Slightly lower speed for left motor\n            pins.analogWritePin(AnalogPin.P13, speed);\n        } else {\n            // Go straight if within the acceptable error range\n            pins.digitalWritePin(DigitalPin.P16, 0); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, speed);\n            pins.analogWritePin(AnalogPin.P13, speed);\n            \n        }\n    }\n}\n"],[0,"basi"]],"start1":873,"start2":873,"length1":1696,"length2":8},{"diffs":[[0,") {\n"],[-1,"    let error = 10;\n"],[0,"    "]],"start1":953,"start2":953,"length1":28,"length2":8},{"diffs":[[0,"  while "],[-1,"("],[0,"error > "]],"start1":959,"start2":959,"length1":17,"length2":16},{"diffs":[[0,"rror > 0"],[-1,")"],[0,"{"],[1,"}"],[0,"\n    con"]],"start1":968,"start2":968,"length1":18,"length2":18},{"diffs":[[0,"   m"],[-1,"r"],[0,"turn("],[1,"-"],[0,"spee"]],"start1":1535,"start2":1535,"length1":14,"length2":14},{"diffs":[[0,"\n    }\n}"],[-1,"\n}"],[0,"\n\nturn(2"]],"start1":1632,"start2":1632,"length1":18,"length2":16}]}]},{"timestamp":1730341474468,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n"],[-1,"    const currentHeading = input.compassHeading();\n"],[0,"    "]],"start1":1055,"start2":1055,"length1":59,"length2":8}]}]},{"timestamp":1730341484978,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ard("],[-1,"duration:number"],[0,") {\n"]],"start1":1051,"start2":1051,"length1":23,"length2":8},{"diffs":[[0,"  const "],[-1,"targe"],[1,"curren"],[0,"tHeading"]],"start1":1061,"start2":1061,"length1":21,"length2":22},{"diffs":[[0,"eading()"],[-1,"-1"],[0,";\n    le"]],"start1":1100,"start2":1100,"length1":18,"length2":16},{"diffs":[[0,"eed\n"],[-1,"        speed = Math.map(speed,0,100,0,1023)"],[0,"\n   "]],"start1":1638,"start2":1638,"length1":52,"length2":8},{"diffs":[[0,"DigitalPin.P16, "],[-1,"1"],[1,"0"],[0,"); // M1 Dir\n   "]],"start1":1802,"start2":1802,"length1":33,"length2":33},{"diffs":[[0,"floor(speed * 0."],[-1,"8"],[1,"9"],[0,")); // Slightly "]],"start1":2002,"start2":2002,"length1":33,"length2":33},{"diffs":[[0,"Pin.P16,"],[-1,"1"],[1," 0"],[0,"); // M1"]],"start1":2176,"start2":2176,"length1":17,"length2":18},{"diffs":[[0,"eed * 0."],[-1,"8"],[1,"9"],[0,")); // S"]],"start1":2322,"start2":2322,"length1":17,"length2":17},{"diffs":[[0,"       } else {\n"],[1,"            // Go straight if within the acceptable error range\n"],[0,"            pins"]],"start1":2430,"start2":2430,"length1":32,"length2":96},{"diffs":[[0,"in.P16, "],[-1,"1"],[1,"0"],[0,"); // M1"]],"start1":2551,"start2":2551,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"pause(duration)\n            stop()\n            break"],[0,"\n   "]],"start1":2754,"start2":2754,"length1":60,"length2":8},{"diffs":[[0,"\n}\n\n"],[-1,"forward(4000)\n//"],[0,"turn("],[-1,"9"],[1,"2"],[0,"0)"]],"start1":3561,"start2":3561,"length1":28,"length2":12}]}]},{"timestamp":1730342076081,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"forward("],[1,"duration:number"],[0,") {\n"],[-1,""],[0,"    cons"]],"start1":1047,"start2":1047,"length1":20,"length2":35},{"diffs":[[0,"error > "],[-1,"1"],[1,"0"],[0,") {\n    "]],"start1":1776,"start2":1776,"length1":17,"length2":17},{"diffs":[[0,"error < "],[-1,"-1"],[1,"0"],[0,") {\n    "]],"start1":2142,"start2":2142,"length1":18,"length2":17},{"diffs":[[0,"in.P13, speed);\n"],[1,"            pause(duration)\n            stop()\n            break\n"],[0,"        }\n    }\n"]],"start1":2725,"start2":2725,"length1":32,"length2":97},{"diffs":[[0,"ard("],[-1,")\n//pause(2000)\n//stop("],[1,"4000"],[0,")\n//"]],"start1":3616,"start2":3616,"length1":31,"length2":12}]}]},{"timestamp":1730342543486,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"le ("],[-1,"true"],[1,"error > 0"],[0,") {\n"]],"start1":1139,"start2":1139,"length1":12,"length2":17},{"diffs":[[0,"speed = "],[-1,"20"],[1,"Math.max(minSpeed, Math.floor(maxSpeed * absError / slowdownThreshold));\n        speed = Math.min(speed, maxSpeed); // Cap speed at maxSpeed"],[0,"\n       "]],"start1":1494,"start2":1494,"length1":18,"length2":156},{"diffs":[[0,"  }\n}\n}\n"],[1,"\n"],[0,"forward("]],"start1":3524,"start2":3524,"length1":16,"length2":17},{"diffs":[[0,"rward()\n"],[1,"//"],[0,"pause(20"]],"start1":3535,"start2":3535,"length1":16,"length2":18},{"diffs":[[0,"e(2000)\n"],[1,"//"],[0,"stop()\n/"]],"start1":3549,"start2":3549,"length1":16,"length2":18}]}]},{"timestamp":1730343348909,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"arget\n    }\n"],[-1,"    "],[0,"}\n}\nforward("]],"start1":3373,"start2":3373,"length1":28,"length2":24}]}]},{"timestamp":1730343355635,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let end:boolean"],[0,"\ncon"]],"start1":0,"start2":0,"length1":19,"length2":4},{"diffs":[[0,"ion "],[-1,"scan"],[1,"forward"],[0,"() {"]],"start1":1043,"start2":1043,"length1":12,"length2":15},{"diffs":[[0,"ng()"],[-1," - 1;\n}\nfunction forward() {\n    \n    let error = 10;"],[1,"-1;\n    let error = 10;\n\n    while (true) {"],[0,"\n   "]],"start1":1103,"start2":1103,"length1":61,"length2":51},{"diffs":[[0,"}\n    }\n"],[1,"}\n"],[0,"basic.fo"]],"start1":2592,"start2":2592,"length1":16,"length2":18},{"diffs":[[0,"}\n}\n"],[-1,"end = false\n"],[0,"forw"]],"start1":3389,"start2":3389,"length1":20,"length2":8}]}]},{"timestamp":1730343955381,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block><block type=\"function_definition\" x=\"506\" y=\"289\"><mutation name=\"turn\" functionid=\"*He`;w;]l+#^u_L2;/of\"></mutation><field name=\"function_name\">turn</field></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":276}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"let end:boolean"],[0,"\nconst minSpeed "]],"start1":0,"start2":0,"length1":16,"length2":31},{"diffs":[[0,"ion "],[-1,"forward(duration:number"],[1,"scan("],[0,") {\n"]],"start1":1058,"start2":1058,"length1":31,"length2":13},{"diffs":[[0,"ng()"],[-1,"-1;\n    let error = 10;\n    let start_time = control.millis()\n    while (true) {"],[1," - 1;\n}\nfunction forward() {\n    \n    let error = 10;"],[0,"\n   "]],"start1":1115,"start2":1115,"length1":88,"length2":61},{"diffs":[[0," (error "],[-1,"< -"],[1,"> "],[0,"1) {\n   "]],"start1":1638,"start2":1638,"length1":19,"length2":18},{"diffs":[[0,"// Corre"],[-1,"-"],[0,"ct towar"]],"start1":1665,"start2":1665,"length1":17,"length2":16},{"diffs":[[0,"floor(speed * 0."],[-1,"5"],[1,"8"],[0,")); // Slightly "]],"start1":1926,"start2":1926,"length1":33,"length2":33},{"diffs":[[0," else if (error "],[-1,"> "],[1,"< -"],[0,"1) {\n           "]],"start1":1996,"start2":1996,"length1":34,"length2":35},{"diffs":[[0,"eed * 0."],[-1,"5"],[1,"8"],[0,")); // S"]],"start1":2246,"start2":2246,"length1":17,"length2":17},{"diffs":[[0,"  }\n"],[-1,"        if(control.millis() - start_time > duration){\n            stop()\n            break\n        }\n"],[0,"    }\n"],[-1,"}\n"],[0,"basi"]],"start1":2612,"start2":2612,"length1":117,"length2":14},{"diffs":[[0,"  }\n"],[-1,"}\n}\nforward(2000)\n\n//"],[1,"    }\n}\nend = false\nforward()\n"],[0,"paus"]],"start1":3401,"start2":3401,"length1":29,"length2":38},{"diffs":[[0,"e(2000)\n"],[-1,"//"],[0,"stop()\n/"]],"start1":3439,"start2":3439,"length1":18,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":239,"start2":239,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1730171551705,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"a\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1730252436002,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block><block type=\"function_definition\" x=\"506\" y=\"289\"><mutation name=\"turn\" functionid=\"*He`;w;]l+#^u_L2;/of\"></mutation><field name=\"function_name\">turn</field></block></xml>","main.ts":"","README.md":"","main.py":"def turn():\n    pass\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"a\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"k8\": \"github:k8robotics/pxt-k8#v1.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1730339619104,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block><block type=\"function_definition\" x=\"506\" y=\"289\"><mutation name=\"turn\" functionid=\"*He`;w;]l+#^u_L2;/of\"></mutation><field name=\"function_name\">turn</field></block></xml>","main.ts":"function turn() {\n    \n}\n\nbasic.forever(function on_forever() {\n    \n})\n","README.md":"","main.py":"def turn():\n    pass\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"a\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"k8\": \"github:k8robotics/pxt-k8#v1.1.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1730341423767,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block><block type=\"function_definition\" x=\"506\" y=\"289\"><mutation name=\"turn\" functionid=\"*He`;w;]l+#^u_L2;/of\"></mutation><field name=\"function_name\">turn</field></block></xml>","main.ts":"\nconst minSpeed = 20;       // Minimum speed when close to the target\nconst maxSpeed = 40;      // Maximum speed when far from the target\nconst slowdownThreshold = 20;  // Start slowing down within this angle\n\nfunction mturn(a:number) {\n    pins.digitalWritePin(DigitalPin.P16, 1) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 0) //M1 Dir\n    a = Math.map(a, 0, 100, 0, 1023)\n    if (a<0){a = 0}else if(a > 1023){a = 1023}\n    pins.analogWritePin(AnalogPin.P15, a)\n    pins.analogWritePin(AnalogPin.P13, a)\n}\nfunction mrturn(a: number) {\n    pins.digitalWritePin(DigitalPin.P16, 0) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 1) //M1 Dir\n    a = Math.map(a, 0, 100, 0, 1023)\n    if (a < 0) { a = 0 } else if (a > 1023) { a = 1023 }\n    pins.analogWritePin(AnalogPin.P15, a)\n    pins.analogWritePin(AnalogPin.P13, a)\n}\nfunction stop() {\n    pins.analogWritePin(AnalogPin.P15, 0)\n    pins.analogWritePin(AnalogPin.P13, 0)\n    pins.digitalWritePin(DigitalPin.P16, 0) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 0) //M2 Dir\n}\nfunction forward(targetHeading:number) {\n    let error = 10;\n\n    while (error > 0) {\n        const currentHeading = input.compassHeading();\n        error = targetHeading - currentHeading;\n\n        if (error > 180) {\n            error -= 360;\n        } else if (error < -180) {\n            error += 360;\n        }\n\n        const absError = Math.abs(error);\n\n        // Map error to speed for directional control\n        let speed = Math.max(minSpeed, Math.floor(maxSpeed * absError / slowdownThreshold));\n        speed = Math.min(speed, maxSpeed); // Cap speed at maxSpeed\n\n        // Determine motor directions based on heading error\n        if (error > 0) {\n            // Correct towards the left\n            pins.digitalWritePin(DigitalPin.P16, 0); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, speed);\n            pins.analogWritePin(AnalogPin.P13, Math.floor(speed * 0.9)); // Slightly lower speed for right motor\n        } else if (error < 0) {\n            // Correct towards the right\n            pins.digitalWritePin(DigitalPin.P16, 0); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, Math.floor(speed * 0.9)); // Slightly lower speed for left motor\n            pins.analogWritePin(AnalogPin.P13, speed);\n        } else {\n            // Go straight if within the acceptable error range\n            pins.digitalWritePin(DigitalPin.P16, 0); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, speed);\n            pins.analogWritePin(AnalogPin.P13, speed);\n            \n        }\n    }\n}\nbasic.forever(function on_forever() { })\n\nfunction turn(targetHeading:number) {\n    let error = 10;\n    while (error > 0){\n    const currentHeading = input.compassHeading();\n    let error = targetHeading - currentHeading;\n\n    if (error > 180) {\n        error -= 360;\n    } else if (error < -180) {\n        error += 360;\n    }\n\n    const absError = Math.abs(error);\n    if (absError > 0) {  // Only turn if error is greater than 5 degrees\n        let speed = Math.max(minSpeed, Math.floor(maxSpeed * absError / slowdownThreshold));\n        speed = Math.min(speed, maxSpeed);  // Cap speed at maxSpeed\n\n        if (error > 0) {\n            mturn(speed);\n        } else {\n            mrturn(speed);\n        }\n    } else {\n        stop();  // Stop when within 5 degrees of target\n    }\n}\n}\n\nturn(20)","README.md":"","main.py":"def turn():\n    pass\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"a\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1730343344912,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block><block type=\"function_definition\" x=\"506\" y=\"289\"><mutation name=\"turn\" functionid=\"*He`;w;]l+#^u_L2;/of\"></mutation><field name=\"function_name\">turn</field></block></xml>","main.ts":"\nconst minSpeed = 20;       // Minimum speed when close to the target\nconst maxSpeed = 40;      // Maximum speed when far from the target\nconst slowdownThreshold = 20;  // Start slowing down within this angle\n\nfunction mturn(a:number) {\n    pins.digitalWritePin(DigitalPin.P16, 1) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 0) //M1 Dir\n    a = Math.map(a, 0, 100, 0, 1023)\n    if (a<0){a = 0}else if(a > 1023){a = 1023}\n    pins.analogWritePin(AnalogPin.P15, a)\n    pins.analogWritePin(AnalogPin.P13, a)\n}\nfunction mrturn(a: number) {\n    pins.digitalWritePin(DigitalPin.P16, 0) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 1) //M1 Dir\n    a = Math.map(a, 0, 100, 0, 1023)\n    if (a < 0) { a = 0 } else if (a > 1023) { a = 1023 }\n    pins.analogWritePin(AnalogPin.P15, a)\n    pins.analogWritePin(AnalogPin.P13, a)\n}\nfunction stop() {\n    pins.analogWritePin(AnalogPin.P15, 0)\n    pins.analogWritePin(AnalogPin.P13, 0)\n    pins.digitalWritePin(DigitalPin.P16, 0) //M1 Dir\n    pins.digitalWritePin(DigitalPin.P14, 0) //M2 Dir\n}\nfunction forward() {\n    const targetHeading = input.compassHeading()-1;\n    let error = 10;\n\n    while (true) {\n        const currentHeading = input.compassHeading();\n        error = targetHeading - currentHeading;\n\n        if (error > 180) {\n            error -= 360;\n        } else if (error < -180) {\n            error += 360;\n        }\n\n        const absError = Math.abs(error);\n\n        // Map error to speed for directional control\n        let speed = 20\n        speed = Math.map(speed,0,100,0,1023)\n        // Determine motor directions based on heading error\n        if (error > 1) {\n            // Correct towards the left\n            pins.digitalWritePin(DigitalPin.P16, 1); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, speed);\n            pins.analogWritePin(AnalogPin.P13, Math.floor(speed * 0.8)); // Slightly lower speed for right motor\n        } else if (error < -1) {\n            // Correct towards the right\n            pins.digitalWritePin(DigitalPin.P16,1); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, Math.floor(speed * 0.8)); // Slightly lower speed for left motor\n            pins.analogWritePin(AnalogPin.P13, speed);\n        } else {\n            pins.digitalWritePin(DigitalPin.P16, 1); // M1 Dir\n            pins.digitalWritePin(DigitalPin.P14, 1); // M1 Dir\n            pins.analogWritePin(AnalogPin.P15, speed);\n            pins.analogWritePin(AnalogPin.P13, speed);\n        }\n    }\n}\nbasic.forever(function on_forever() { })\n\nfunction turn(targetHeading:number) {\n    let error = 10;\n    while (error > 0){\n    const currentHeading = input.compassHeading();\n    let error = targetHeading - currentHeading;\n\n    if (error > 180) {\n        error -= 360;\n    } else if (error < -180) {\n        error += 360;\n    }\n\n    const absError = Math.abs(error);\n    if (absError > 0) {  // Only turn if error is greater than 5 degrees\n        let speed = Math.max(minSpeed, Math.floor(maxSpeed * absError / slowdownThreshold));\n        speed = Math.min(speed, maxSpeed);  // Cap speed at maxSpeed\n\n        if (error > 0) {\n            mturn(speed);\n        } else {\n            mrturn(speed);\n        }\n    } else {\n        stop();  // Stop when within 5 degrees of target\n    }\n}\n}\nforward()\npause(2000)\nstop()\n//turn(90)","README.md":"","main.py":"def turn():\n    pass\n\ndef on_forever():\n    pass\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"a\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1730344334694}